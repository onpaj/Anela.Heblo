// <auto-generated />
using System;
using Anela.Heblo.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Anela.Heblo.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250821071130_AddJournalFeature")]
    partial class AddJournalFeature
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Journal.JournalEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("character varying(10000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedByUserId")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedByUserId")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId")
                        .HasDatabaseName("IX_JournalEntries_CreatedByUserId");

                    b.HasIndex("EntryDate")
                        .HasDatabaseName("IX_JournalEntries_EntryDate");

                    b.HasIndex("IsDeleted", "EntryDate")
                        .HasDatabaseName("IX_JournalEntries_IsDeleted_EntryDate");

                    b.ToTable("JournalEntries", (string)null);
                });

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Journal.JournalEntryProduct", b =>
                {
                    b.Property<int>("JournalEntryId")
                        .HasColumnType("integer");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("JournalEntryId", "ProductCode");

                    b.HasIndex("ProductCode")
                        .HasDatabaseName("IX_JournalEntryProducts_ProductCode");

                    b.ToTable("JournalEntryProducts", (string)null);
                });

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Journal.JournalEntryProductFamily", b =>
                {
                    b.Property<int>("JournalEntryId")
                        .HasColumnType("integer");

                    b.Property<string>("ProductCodePrefix")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("JournalEntryId", "ProductCodePrefix");

                    b.HasIndex("ProductCodePrefix")
                        .HasDatabaseName("IX_JournalEntryProductFamilies_ProductCodePrefix");

                    b.ToTable("JournalEntryProductFamilies", (string)null);
                });

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Journal.JournalEntryTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_JournalEntryTags_Name");

                    b.ToTable("JournalEntryTags", (string)null);
                });

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Journal.JournalEntryTagAssignment", b =>
                {
                    b.Property<int>("JournalEntryId")
                        .HasColumnType("integer");

                    b.Property<int>("TagId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("JournalEntryId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("JournalEntryTagAssignments", (string)null);
                });

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Logistics.Transport.TransportBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("DefaultReceiveState")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastStateChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TransportBox", "dbo");
                });

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Logistics.Transport.TransportBoxItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TransportBoxId")
                        .HasColumnType("integer");

                    b.Property<string>("UserAdded")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TransportBoxId");

                    b.ToTable("TransportBoxItem", "dbo");
                });

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Logistics.Transport.TransportBoxStateLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("TransportBoxId")
                        .HasColumnType("integer");

                    b.Property<string>("User")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TransportBoxId");

                    b.ToTable("TransportBoxStateLog", "dbo");
                });

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Purchase.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Notes")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.ToTable("PurchaseOrders", "dbo");
                });

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Purchase.PurchaseOrderHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("ChangedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ChangedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NewValue")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("OldValue")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChangedAt");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderHistory", "dbo");
                });

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Purchase.PurchaseOrderLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("MaterialId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Notes")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderLines", "dbo");
                });

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Journal.JournalEntryProduct", b =>
                {
                    b.HasOne("Anela.Heblo.Domain.Features.Journal.JournalEntry", "JournalEntry")
                        .WithMany("ProductAssociations")
                        .HasForeignKey("JournalEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JournalEntry");
                });

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Journal.JournalEntryProductFamily", b =>
                {
                    b.HasOne("Anela.Heblo.Domain.Features.Journal.JournalEntry", "JournalEntry")
                        .WithMany("ProductFamilyAssociations")
                        .HasForeignKey("JournalEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JournalEntry");
                });

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Journal.JournalEntryTagAssignment", b =>
                {
                    b.HasOne("Anela.Heblo.Domain.Features.Journal.JournalEntry", "JournalEntry")
                        .WithMany("TagAssignments")
                        .HasForeignKey("JournalEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Anela.Heblo.Domain.Features.Journal.JournalEntryTag", "Tag")
                        .WithMany("TagAssignments")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JournalEntry");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Logistics.Transport.TransportBoxItem", b =>
                {
                    b.HasOne("Anela.Heblo.Domain.Features.Logistics.Transport.TransportBox", null)
                        .WithMany("Items")
                        .HasForeignKey("TransportBoxId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Logistics.Transport.TransportBoxStateLog", b =>
                {
                    b.HasOne("Anela.Heblo.Domain.Features.Logistics.Transport.TransportBox", null)
                        .WithMany("StateLog")
                        .HasForeignKey("TransportBoxId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Purchase.PurchaseOrderHistory", b =>
                {
                    b.HasOne("Anela.Heblo.Domain.Features.Purchase.PurchaseOrder", null)
                        .WithMany("History")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Purchase.PurchaseOrderLine", b =>
                {
                    b.HasOne("Anela.Heblo.Domain.Features.Purchase.PurchaseOrder", null)
                        .WithMany("Lines")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Journal.JournalEntry", b =>
                {
                    b.Navigation("ProductAssociations");

                    b.Navigation("ProductFamilyAssociations");

                    b.Navigation("TagAssignments");
                });

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Journal.JournalEntryTag", b =>
                {
                    b.Navigation("TagAssignments");
                });

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Logistics.Transport.TransportBox", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("StateLog");
                });

            modelBuilder.Entity("Anela.Heblo.Domain.Features.Purchase.PurchaseOrder", b =>
                {
                    b.Navigation("History");

                    b.Navigation("Lines");
                });
#pragma warning restore 612, 618
        }
    }
}
